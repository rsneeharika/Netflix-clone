[{"/Users/neeharikars/react-netflix-clone/src/index.js":"1","/Users/neeharikars/react-netflix-clone/src/reportWebVitals.js":"2","/Users/neeharikars/react-netflix-clone/src/App.js":"3","/Users/neeharikars/react-netflix-clone/src/Row.js":"4","/Users/neeharikars/react-netflix-clone/src/axios.js":"5","/Users/neeharikars/react-netflix-clone/src/requests.js":"6","/Users/neeharikars/react-netflix-clone/src/Banner.js":"7","/Users/neeharikars/react-netflix-clone/src/Nav.js":"8"},{"size":535,"mtime":1698238265143,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1698238265143,"results":"11","hashOfConfig":"10"},{"size":855,"mtime":1698932459370,"results":"12","hashOfConfig":"10"},{"size":1822,"mtime":1699284670836,"results":"13","hashOfConfig":"10"},{"size":134,"mtime":1698846764475,"results":"14","hashOfConfig":"10"},{"size":708,"mtime":1698846114546,"results":"15","hashOfConfig":"10"},{"size":1483,"mtime":1699280461244,"results":"16","hashOfConfig":"10"},{"size":971,"mtime":1698934145175,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1fzdva",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/neeharikars/react-netflix-clone/src/index.js",[],[],["45"],"/Users/neeharikars/react-netflix-clone/src/reportWebVitals.js",[],[],"/Users/neeharikars/react-netflix-clone/src/App.js",[],[],"/Users/neeharikars/react-netflix-clone/src/Row.js",["46"],[],"import React, {useState , useEffect} from 'react'\nimport axios from './axios';\nimport  './Row.css';\nimport Youtube from \"react-youtube\";\nimport movieTrailer from 'movie-trailer';\n\nconst base_url =\"https://image.tmdb.org/t/p/original/\"\nfunction Row( { title, fetchUrl ,isLargeRow }) {\n\n    const [ movies, setMovies] = useState([]);\n    const [trailerUrl,setTrailerUrl] = useState(\"\");\n\n    useEffect(() => {\n\n        async function fetchData() {\n               const request = await axios.get(fetchUrl);\n               //console.log(request)\n               setMovies(request.data.results)\n               return request\n        }\n        fetchData()\n\n    }, [fetchUrl])\n\n    const opts = {\n        height:\"390\",\n        width:\"100%\",\n        playVars:{\n            //https://developers.google.com/youtube/player_parameters\n            autoplay:1,\n        },\n    };\n    const handleHover =(movie) => {\n        if(trailerUrl) {\n            setTrailerUrl('');\n        } else {\n            movieTrailer(movie?.name || \"\")\n            .then(url => {\n              const urlParams = new URLSearchParams(new URL(url).search)\n              setTrailerUrl(urlParams.get('v'))\n            }).catch((error) => console.log(error))\n        }\n    }\n\n    //console.log(movies)\n\n  return (\n    <div className =\"row\">\n       <h2> {title}</h2>\n       <div className=\"row__posters\">\n\n        {movies ?.map((movie) => (\n            <img \n            key={movie.id}\n            onClick={() => handleHover(movie)}\n            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n            src={`${base_url}${ isLargeRow ? movie.poster_path : movie.backdrop_path}`} \n            alt ={movie.name} />\n\n        ))}\n       </div>\n       {trailerUrl && <Youtube videoId ={trailerUrl} opts={opts} /> }\n    </div>\n  )\n}\n\nexport default Row\n\n\n","/Users/neeharikars/react-netflix-clone/src/axios.js",[],[],"/Users/neeharikars/react-netflix-clone/src/requests.js",[],[],"/Users/neeharikars/react-netflix-clone/src/Banner.js",["47","48"],[],"import React, { useEffect, useState} from 'react'\nimport axios from './axios';\nimport requests from './requests';\nimport './Banner.css'\nfunction Banner() {\n\n    const [movie, setMovie] = useState({});\n\n    useEffect(() => {\n\n        async function fetchData() {\n            const request = await axios.get(requests.fetchNetflixOrigionals);\n            setMovie (\n                request.data.results[\n                    Math.floor(Math.random() * request.data.results.length-1)\n                ]\n            )\n\n        }\n        fetchData();\n\n    },[]);\n    //console.log(movie);\n\n    function truncate(str, n){\n        return str?. length > n ? str.substr(0,n-1) +\"...\" : str;\n    }\n  return (\n    <header className=\"banner\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(\n            \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\n        )`,\n        backgroundPosition:\" center center\",\n      }}\n     >\n        <div className=\"banner__contents\">\n            <h1>{movie ?.title || movie?.original_name}</h1>\n            <div className =\"banner__buttons\">\n                <button className=\"banner__button\">Play</button>\n                <button className=\"banner__button\">My List</button>\n\n            </div>\n\n            <h1 className=\"banner__description\">{movie?.overview}\n            {truncate(movie?.overview, 150)}</h1>\n\n\n        </div>\n\n        <div className=\"banner--fadeBottom\" />\n\n    </header>\n  )\n}\n\nexport default Banner\n","/Users/neeharikars/react-netflix-clone/src/Nav.js",[],[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":52,"column":10,"nodeType":"53","messageId":"54","endLine":52,"endColumn":22,"fix":"55"},{"ruleId":"51","severity":1,"message":"56","line":26,"column":16,"nodeType":"53","messageId":"54","endLine":26,"endColumn":28,"fix":"57"},{"ruleId":"51","severity":1,"message":"58","line":39,"column":18,"nodeType":"53","messageId":"54","endLine":39,"endColumn":31,"fix":"59"},"no-new-object",["60"],"no-whitespace-before-property","Unexpected whitespace before property map.","MemberExpression","unexpectedWhitespace",{"range":"61","text":"62"},"Unexpected whitespace before property length.",{"range":"63","text":"62"},"Unexpected whitespace before property title.",{"range":"64","text":"62"},"no-object-constructor",[1378,1381],"?.",[631,634],[1018,1021]]