{"ast":null,"code":"import _regeneratorRuntime from\"/Users/neeharikars/react-netflix-clone/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/neeharikars/react-netflix-clone/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/neeharikars/react-netflix-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import axios from'./axios';import'./Row.css';import Youtube from\"react-youtube\";import movieTrailer from'movie-trailer';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var base_url=\"https://image.tmdb.org/t/p/original/\";function Row(_ref){var title=_ref.title,fetchUrl=_ref.fetchUrl,isLargeRow=_ref.isLargeRow;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),trailerUrl=_useState4[0],setTrailerUrl=_useState4[1];useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var request;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(fetchUrl);case 2:request=_context.sent;//console.log(request)\nsetMovies(request.data.results);return _context.abrupt(\"return\",request);case 5:case\"end\":return _context.stop();}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[fetchUrl]);var opts={height:\"390\",width:\"100%\",playVars:{//https://developers.google.com/youtube/player_parameters\nautoplay:1}};var handleHover=function handleHover(movie){if(trailerUrl){setTrailerUrl('');}else{movieTrailer((movie===null||movie===void 0?void 0:movie.name)||\"\").then(function(url){var urlParams=new URLSearchParams(new URL(url).search);setTrailerUrl(urlParams.get('v'));}).catch(function(error){return console.log(error);});}};//console.log(movies)\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\" \",title]}),/*#__PURE__*/_jsx(\"div\",{className:\"row__posters\",children:movies===null||movies===void 0?void 0:movies.map(function(movie){return/*#__PURE__*/_jsx(\"img\",{onClick:function onClick(){return handleHover(movie);},className:\"row__poster \".concat(isLargeRow&&\"row__posterLarge\"),src:\"\".concat(base_url).concat(isLargeRow?movie.poster_path:movie.backdrop_path),alt:movie.name},movie.id);})}),trailerUrl&&/*#__PURE__*/_jsx(Youtube,{videoId:trailerUrl,opts:opts})]});}export default Row;","map":{"version":3,"names":["React","useState","useEffect","axios","Youtube","movieTrailer","jsxs","_jsxs","jsx","_jsx","base_url","Row","_ref","title","fetchUrl","isLargeRow","_useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","trailerUrl","setTrailerUrl","fetchData","_fetchData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","request","wrap","_callee$","_context","prev","next","get","sent","data","results","abrupt","stop","opts","height","width","playVars","autoplay","handleHover","movie","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","className","children","map","onClick","concat","src","poster_path","backdrop_path","alt","id","videoId"],"sources":["/Users/neeharikars/react-netflix-clone/src/Row.js"],"sourcesContent":["import React, {useState , useEffect} from 'react'\nimport axios from './axios';\nimport  './Row.css';\nimport Youtube from \"react-youtube\";\nimport movieTrailer from 'movie-trailer';\n\nconst base_url =\"https://image.tmdb.org/t/p/original/\"\nfunction Row( { title, fetchUrl ,isLargeRow }) {\n\n    const [ movies, setMovies] = useState([]);\n    const [trailerUrl,setTrailerUrl] = useState(\"\");\n\n    useEffect(() => {\n\n        async function fetchData() {\n               const request = await axios.get(fetchUrl);\n               //console.log(request)\n               setMovies(request.data.results)\n               return request\n        }\n        fetchData()\n\n    }, [fetchUrl])\n\n    const opts = {\n        height:\"390\",\n        width:\"100%\",\n        playVars:{\n            //https://developers.google.com/youtube/player_parameters\n            autoplay:1,\n        },\n    };\n    const handleHover =(movie) => {\n        if(trailerUrl) {\n            setTrailerUrl('');\n        } else {\n            movieTrailer(movie?.name || \"\")\n            .then(url => {\n              const urlParams = new URLSearchParams(new URL(url).search)\n              setTrailerUrl(urlParams.get('v'))\n            }).catch((error) => console.log(error))\n        }\n    }\n\n    //console.log(movies)\n\n  return (\n    <div className =\"row\">\n       <h2> {title}</h2>\n       <div className=\"row__posters\">\n\n        {movies ?.map((movie) => (\n            <img \n            key={movie.id}\n            onClick={() => handleHover(movie)}\n            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n            src={`${base_url}${ isLargeRow ? movie.poster_path : movie.backdrop_path}`} \n            alt ={movie.name} />\n\n        ))}\n       </div>\n       {trailerUrl && <Youtube videoId ={trailerUrl} opts={opts} /> }\n    </div>\n  )\n}\n\nexport default Row\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}