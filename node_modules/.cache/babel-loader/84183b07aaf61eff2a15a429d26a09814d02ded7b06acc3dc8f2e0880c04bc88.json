{"ast":null,"code":"var _jsxFileName = \"/Users/neeharikars/react-netflix-clone/src/Row.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport './Row.css';\nimport Youtube from \"react-youtube\";\nimport movieTrailer from 'movie-trailer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\nfunction Row({\n  title,\n  fetchUrl,\n  isLargeRow\n}) {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      //console.log(request)\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playVars: {\n      //https://developers.google.com/youtube/player_parameters\n      autoplay: 1\n    }\n  };\n  const handleHover = movie => {\n    if (trailerUrl) {\n      setTrailerUrl('');\n    } else {\n      movieTrailer((movie === null || movie === void 0 ? void 0 : movie.name) || \"\").then(url => {\n        const urlParams = new URLSearchParams(new URL(url).search);\n        setTrailerUrl(urlParams.get('v'));\n      }).catch(error => console.log(error));\n    }\n  };\n\n  //console.log(movies)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies === null || movies === void 0 ? void 0 : movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        onMouseOver: () => handleHover(movie),\n        className: `row__poster ${isLargeRow && \"row__posterLarge\"}`,\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 8\n    }, this), trailerUrl && /*#__PURE__*/_jsxDEV(Youtube, {\n      videoId: trailerUrl,\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Row, \"pyeOXnLUF0ikH/FjaI5OyHdXQrk=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useState","useEffect","axios","Youtube","movieTrailer","jsxDEV","_jsxDEV","base_url","Row","title","fetchUrl","isLargeRow","_s","movies","setMovies","trailerUrl","setTrailerUrl","fetchData","request","get","data","results","opts","height","width","playVars","autoplay","handleHover","movie","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onMouseOver","src","poster_path","backdrop_path","alt","id","videoId","_c","$RefreshReg$"],"sources":["/Users/neeharikars/react-netflix-clone/src/Row.js"],"sourcesContent":["import React, {useState , useEffect} from 'react'\nimport axios from './axios';\nimport  './Row.css';\nimport Youtube from \"react-youtube\";\nimport movieTrailer from 'movie-trailer';\n\nconst base_url =\"https://image.tmdb.org/t/p/original/\"\nfunction Row( { title, fetchUrl ,isLargeRow }) {\n\n    const [ movies, setMovies] = useState([]);\n    const [trailerUrl,setTrailerUrl] = useState(\"\");\n\n    useEffect(() => {\n\n        async function fetchData() {\n               const request = await axios.get(fetchUrl);\n               //console.log(request)\n               setMovies(request.data.results)\n               return request\n        }\n        fetchData()\n\n    }, [fetchUrl])\n\n    const opts = {\n        height:\"390\",\n        width:\"100%\",\n        playVars:{\n            //https://developers.google.com/youtube/player_parameters\n            autoplay:1,\n        },\n    };\n    const handleHover =(movie) => {\n        if(trailerUrl) {\n            setTrailerUrl('');\n        } else {\n            movieTrailer(movie?.name || \"\")\n            .then(url => {\n              const urlParams = new URLSearchParams(new URL(url).search)\n              setTrailerUrl(urlParams.get('v'))\n            }).catch((error) => console.log(error))\n        }\n    }\n\n    //console.log(movies)\n\n  return (\n    <div className =\"row\">\n       <h2> {title}</h2>\n       <div className=\"row__posters\">\n\n        {movies ?.map((movie) => (\n            <img \n            key={movie.id}\n            onMouseOver={() => handleHover(movie)}\n            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n            src={`${base_url}${ isLargeRow ? movie.poster_path : movie.backdrop_path}`} \n            alt ={movie.name} />\n\n        ))}\n       </div>\n       {trailerUrl && <Youtube videoId ={trailerUrl} opts={opts} /> }\n    </div>\n  )\n}\n\nexport default Row\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}